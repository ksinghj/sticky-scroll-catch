"use strict";

var _utils = require("./utils");

var _debounce = _interopRequireDefault(require("./utils/debounce"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const target = document.querySelector('.js-sticky-scroll-catch');
const parent = target.parentElement;
let targetHeight = target.offsetHeight;
let parentHeight = parent.offsetHeight;
let scrollDirection;
let isCatchPos = false;
const stickyScrollCatch = (0, _debounce.default)(() => {
  {
    if ((0, _utils.isElmScrolledBottom)(target)) {
      (0, _utils.setActiveState)(_utils.STATES.SCROLL_DOWN_CATCH, target);
      if (scrollDirection) isCatchPos = true;
    }

    if ((0, _utils.isElmScrolledBottom)(parent)) {
      (0, _utils.setActiveState)(_utils.STATES.SCROLL_BREAK, target);
    } // handle scroll up and 'catch' so scrolls with window


    if (!(0, _utils.isElmScrolledBottom)(target) && scrollDirection && !isCatchPos) {
      let YAxisSpace = parentHeight - targetHeight;
      let topDistanceFromParent = target.getBoundingClientRect().top - parent.getBoundingClientRect().top;
      let bottomYAxisSpace = YAxisSpace - topDistanceFromParent;
      (0, _utils.setActiveState)(_utils.STATES.UPSCROLL, target);
      target.style.bottom = `${bottomYAxisSpace}px`;
      isCatchPos = true;
    } // handle scroll up and 'catch' so scrolls with window DOWNSCROLL catch


    if (!scrollDirection && target.classList.contains('sticky-scroll-catch--scrolled-top') && !isCatchPos) {
      let YAxisSpace = parentHeight - targetHeight;
      let topDistanceFromParent = target.getBoundingClientRect().top - parent.getBoundingClientRect().top;
      let bottomYAxisSpace = YAxisSpace - topDistanceFromParent;
      (0, _utils.setActiveState)(_utils.STATES.DOWNSCROLL, target);
      target.style.bottom = `${bottomYAxisSpace}px`;
      isCatchPos = true;
    }

    if (!scrollDirection) isCatchPos = false; // fix to top

    if (target.getBoundingClientRect().top > 0 && scrollDirection) {
      (0, _utils.setActiveState)(_utils.STATES.SCROLL_TOP, target);
    }

    if (parent.getBoundingClientRect().top > 0) {
      (0, _utils.setActiveState)(_utils.STATES.INITAL, target);
    }

    console.log(parent.getBoundingClientRect().top == target.getBoundingClientRect().top);

    window.onscroll = function () {
      // print "false" if direction is down and "true" if up
      scrollDirection = this.oldScroll > this.scrollY;
      this.oldScroll = this.scrollY;
    };
  }
}, 20);
window.addEventListener('scroll', stickyScrollCatch);