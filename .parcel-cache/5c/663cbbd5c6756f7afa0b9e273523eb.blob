"use strict";

var _utils = require("./utils");

// TODO: debounce
const target = document.querySelector('.sticky-scroll-catch');
const parent = target.parentElement;
let scrollDirection;
window.addEventListener('scroll', () => {
  if ((0, _utils.isElmScrolledBottom)(target)) {
    target.classList.add('sticky-scroll-catch--scrolled');
  }

  if ((0, _utils.isElmScrolledBottom)(parent)) {
    target.classList.add('sticky-scroll-catch--break');
  } // handle scroll up and 'catch' so scrolls with window


  if (!(0, _utils.isElmScrolledBottom)(target) && scrollDirection) {
    target.classList.remove('sticky-scroll-catch--scrolled');
    target.classList.remove('sticky-scroll-catch--break'); // target.classList.add('sticky-scroll-catch--upscroll')
  }

  if (!scrollDirection) {
    target.classList.remove('sticky-scroll-catch--upscroll');
  } //   if (target.classList.contains('sticky-scroll-catch--upscroll')) {
  // calculate distance between bottom of target and bottom of target container


  let targetHeight = target.offsetHeight;
  let parentHeight = parent.offsetHeight;
  let distFromTop = Math.abs(target.getBoundingClientRect().top);
  let YAxisSpace = parentHeight - targetHeight;
  console.log(target.getBoundingClientRect().bottom); //   }

  window.onscroll = function () {
    // print "false" if direction is down and "true" if up
    scrollDirection = this.oldScroll > this.scrollY;
    this.oldScroll = this.scrollY;
  };
});